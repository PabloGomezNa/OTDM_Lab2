#.Run file that implements the PRIMAL SVM methods and calculates the accuracy
reset;

# ========================================
# 1. Train
# ========================================

#Select the solver to use
option solver minos;

model primal.mod; #Load our model
#data .\processed_data\data_train_80.dat; #Load the training data
#data .\processed_data\data_train_800.dat; #Load the training data
data .\processed_data\data_train_1600.dat; #Load the training data
#data .\processed_data\Student_performance_train_data.dat; #Load the training data
	
let C := 0.001; #Set regularization parameter

solve; #Solve the optm. problem
display w, b; #Display the results, the weight and 


# ========================================
# 2. Test 
# ========================================

#Load the test data
#data .\processed_data\data_test_20.dat;
#data .\processed_data\data_test_200.dat;
data .\processed_data\data_test_400.dat; #Load the test data
#data .\processed_data\Student_performance_test_data.dat; #Load the test data

#Declare new variables we will use
param correct_predictions;
param accuracy;

#Make predictios using weights obtained from training
param y_pred {i in N_test};

for {i in N_test} {
    let y_pred[i] := if sum {j in 1..n} w[j] * X_test[i,j] + b >= 0 then 1 else -1;
}


# Calculate the number of correct predictions to calculate precision
let correct_predictions := sum {i in N_test} (if y_test[i] = y_pred[i] then 1 else 0);

# Calculate precision
let accuracy := correct_predictions / card(N_test);

# Display  correct predictions and accuracy
display correct_predictions, accuracy;
